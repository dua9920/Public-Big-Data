-- 동영상 실습
select * from tab1;

select current_timestamp;

select * from tb_grade;

-- 백업하기 위하여 copy
create table tb_emp3
as select * from tb_emp;

select * from tb_emp3;


select prod_cd from tb_accnt
group by prod_cd;

select * from tb_prod;

select * from tb_emp e, tb_org r
where e.org_cd  = r.org_cd;

select position, count(*), sum(salary), avg(salary)
from tb_emp
group by position;

select * from tb_emp;
select concat(emp_name, '의 연봉은', salary) from tb_emp;
select emp_name, to_char((current_timestamp - ent_date), 'WW') 근무주수
from tb_emp where org_cd = '10';

select now()-ent_date, current_timestamp - ent_date, ent_date from tb_emp te;

-- SQL 함수 실습
-- [실습1] 날짜/시간 데이터 다루기(1)


-- 1) 현재 시간 조회하는 방법
select now();
-- 1) 결과
now                |
-------------------+
2021-07-23 19:35:23|


-- 2) 현재시간보다 하루 전 날짜 구하는 방법
select now(), now()::date - '1 day'::interval "하루전 날짜";
-- 2) 결과
now                |하루전 날짜             |
-------------------+-------------------+
2021-07-23 20:11:31|2021-07-22 00:00:00|


-- 3) 현재 타임존 조회하는 방법
show timezone;
-- 3) 결과
TimeZone  |
----------+
Asia/Seoul|


-- 4) 시스템 일자 조회하는 방법
select current_date, current_time, timeofday();
select now(), current_timestamp, timestamp 'now';
-- 4) 결과
current_date|current_time|timeofday                          |
------------+------------+-----------------------------------+
  2021-07-23|    20:12:32|Fri Jul 23 20:12:32.490969 2021 KST|
  
now                |current_timestamp  |timestamp          |
-------------------+-------------------+-------------------+
2021-07-23 20:13:55|2021-07-23 20:13:55|2021-07-23 20:13:55| 


-- 5) 날짜에서 연도를 추출하는 방법
-- date_part, extract, date_trunc
-- 5-1) date_part
select date_part('year', timestamp '2020-07-30 20:38:40');
select date_part('year', current_timestamp); 
-- 5-1) 결과
date_part|
---------+
   2020.0|
date_part|
---------+
   2021.0|
   
-- 5-2) extract
select extract('isoyear' from date '2006-01-01');
select extract('isoyear' from current_timestamp);
-- 5-2) 결과
date_part|
---------+
   2005.0|
date_part|
---------+
   2021.0|

-- 5-3) date_trunc
select date_trunc('year', timestamp '2020-07-30 20:38:40');
select date_trunc('year', current_timestamp);
-- 5-3) 결과
date_trunc         |
-------------------+
2020-01-01 00:00:00|
date_trunc         |
-------------------+
2021-01-01 00:00:00|


-- 6) 날짜에서 월을 추출하는 방법
-- 6-1) date_part
select date_part('month', timestamp '2020-07-30 20:38:40');
select date_part('month', current_timestamp);
-- 6-1) 결과
date_part|
---------+
      7.0|
date_part|
---------+
      7.0|

-- 6-2) extract
select extract('month' from timestamp '2020-07-30 20:38:40');
select extract('month' from interval '2 year 3 months');
select extract('month' from interval '2 years 13 months'); -- 12월에서 다시 1월로
-- 6-2) 결과
date_part|
---------+
      7.0|
date_part|
---------+
      3.0|
date_part|
---------+
      1.0|

-- 6-3) date_trunc
-- 월까지만 나오고 나머지는 초기화
select date_trunc('month', timestamp '2020-07-30 20:38:40'); 
-- 6-3) 결과
date_trunc         |
-------------------+
2020-07-01 00:00:00|


-- 7) 날짜에서 일을 추출하는 방법
select date_part('day', timestamp '2020-07-30 20:38:40');
select date_trunc('day', timestamp '2020-07-30 20:38:40'); 
-- 7) 결과
date_part|
---------+
     30.0|
date_trunc         |
-------------------+
2020-07-30 00:00:00|


-- 8) 시간에서 시각을 추출하는 방법
select date_part('hour', timestamp '2013-07-30 20:38:40');
select date_part('hour', interval '4 hours 3minutes');
select date_trunc('hour', timestamp '2020-07-30 20:38:40');  -- 시까지 나옴
-- 8) 결과
date_part|
---------+
     20.0|
date_part|
---------+
      4.0|      
date_trunc         |
-------------------+
2020-07-30 20:00:00|


-- 9) 시간에서 분을 추출하는 방법
select date_part('minute', timestamp '2020-07-30 20:38:40');
select date_trunc('minute', timestamp '2020/07/30 20:38:30'); 
-- 9) 결과
date_part|
---------+
     38.0|
date_trunc         |
-------------------+
2020-07-30 20:38:00|


-- 10) 시간에서 초를 추출하는 방법
select date_part('second', timestamp '2013/07/30 20:38:40');
select extract('second' from time '17:12:28.5');
select date_trunc('second', timestamp '2013/07/30 20:38:40'); 
-- 10) 결과
date_part|
---------+
     40.0|
date_part|
---------+
     28.5|      
date_trunc         |
-------------------+
2013-07-30 20:38:40|




-- [실습 2-1] 변환함수
-- 1) 추수 구하기
select emp_name, to_char((current_timestamp - ent_date), 'W') weeks
from tb_emp
where org_cd = '10';
-- 1) 결과
emp_name|weeks |
--------+------+
유홍영     |105442|
박경수     |105436|
윤영현     |105458|
이승범     |105447|
안지혜     |105442|


-- 2) TO_CHAR 구문
select emp_name, ent_date,
	to_char(ent_date, 'yyyy') 입사년,
	to_char(ent_date, 'MM') 입사월,
	to_char(ent_date, 'DD') 입사일
from tb_emp;
-- 2) 결과
emp_name|ent_date           |입사년 |입사월|입사일|
--------+-------------------+----+---+---+
김현광     |0001-11-09 00:00:00|0001|11 |09 |
이유섭     |0001-10-15 00:00:00|0001|10 |15 |
최명화     |0001-11-01 00:00:00|0001|11 |01 |
이지은     |0001-03-17 00:00:00|0001|03 |17 |
정은지     |0001-10-18 00:00:00|0001|10 |18 |
김성근     |0001-12-28 00:00:00|0001|12 |28 |
장창우     |0001-09-04 00:00:00|0001|09 |04 |
김진주     |0001-12-24 00:00:00|0001|12 |24 |
한영수     |0001-10-09 00:00:00|0001|10 |09 |
유홍영     |0001-09-28 00:00:00|0001|09 |28 |
황예리     |0001-08-20 00:00:00|0001|08 |20 |
정민호     |0001-04-21 00:00:00|0001|04 |21 |
김혁근     |0001-01-12 00:00:00|0001|01 |12 |
이경탁     |0001-01-04 00:00:00|0001|01 |04 |
김성두     |0001-07-25 00:00:00|0001|07 |25 |
박경수     |0001-11-05 00:00:00|0001|11 |05 |
김한빈     |0001-10-09 00:00:00|0001|10 |09 |
이철환     |0001-01-10 00:00:00|0001|01 |10 |
최석주     |0001-06-10 00:00:00|0001|06 |10 |
이창일     |0001-09-03 00:00:00|0001|09 |03 |
홍현철     |0001-03-06 00:00:00|0001|03 |06 |
윤영현     |0001-06-06 00:00:00|0001|06 |06 |
김형욱     |0001-04-22 00:00:00|0001|04 |22 |
최계영     |0001-05-27 00:00:00|0001|05 |27 |
김홍주     |0001-07-04 00:00:00|0001|07 |04 |
목경인     |0001-02-05 00:00:00|0001|02 |05 |
한승훈     |0001-05-03 00:00:00|0001|05 |03 |
이승범     |0001-08-22 00:00:00|0001|08 |22 |
안지혜     |0001-09-26 00:00:00|0001|09 |26 |
김미정     |2014-01-02 00:00:00|2014|01 |02 |      
      

-- 3) Extract 구문
select emp_name, ent_date,
	extract('year' from ent_date) 입사년,
	extract('month' from ent_date) 입사월,
	extract('day' from ent_date) 입사일
from tb_emp;
-- 3) 결과
emp_name|ent_date           |입사년   |입사월 |입사일 |
--------+-------------------+------+----+----+
김현광     |0001-11-09 00:00:00|  -1.0|11.0| 9.0|
이유섭     |0001-10-15 00:00:00|  -1.0|10.0|15.0|
최명화     |0001-11-01 00:00:00|  -1.0|11.0| 1.0|
이지은     |0001-03-17 00:00:00|  -1.0| 3.0|17.0|
정은지     |0001-10-18 00:00:00|  -1.0|10.0|18.0|
김성근     |0001-12-28 00:00:00|  -1.0|12.0|28.0|
장창우     |0001-09-04 00:00:00|  -1.0| 9.0| 4.0|
김진주     |0001-12-24 00:00:00|  -1.0|12.0|24.0|
한영수     |0001-10-09 00:00:00|  -1.0|10.0| 9.0|
유홍영     |0001-09-28 00:00:00|  -1.0| 9.0|28.0|
황예리     |0001-08-20 00:00:00|  -1.0| 8.0|20.0|
정민호     |0001-04-21 00:00:00|  -1.0| 4.0|21.0|
김혁근     |0001-01-12 00:00:00|  -1.0| 1.0|12.0|
이경탁     |0001-01-04 00:00:00|  -1.0| 1.0| 4.0|
김성두     |0001-07-25 00:00:00|  -1.0| 7.0|25.0|
박경수     |0001-11-05 00:00:00|  -1.0|11.0| 5.0|
김한빈     |0001-10-09 00:00:00|  -1.0|10.0| 9.0|
이철환     |0001-01-10 00:00:00|  -1.0| 1.0|10.0|
최석주     |0001-06-10 00:00:00|  -1.0| 6.0|10.0|
이창일     |0001-09-03 00:00:00|  -1.0| 9.0| 3.0|
홍현철     |0001-03-06 00:00:00|  -1.0| 3.0| 6.0|
윤영현     |0001-06-06 00:00:00|  -1.0| 6.0| 6.0|
김형욱     |0001-04-22 00:00:00|  -1.0| 4.0|22.0|
최계영     |0001-05-27 00:00:00|  -1.0| 5.0|27.0|
김홍주     |0001-07-04 00:00:00|  -1.0| 7.0| 4.0|
목경인     |0001-02-05 00:00:00|  -1.0| 2.0| 5.0|
한승훈     |0001-05-03 00:00:00|  -1.0| 5.0| 3.0|
이승범     |0001-08-22 00:00:00|  -1.0| 8.0|22.0|
안지혜     |0001-09-26 00:00:00|  -1.0| 9.0|26.0|
김미정     |2014-01-02 00:00:00|2014.0| 1.0| 2.0|


-- 4) 변환 함수
-- 명시적 데이터 유형 변환
select to_date('05 Dec 2000', 'DD Mon YYYY');
select to_number('12,454.8-', '99G999D9S'); 
select to_timestamp('05 Dec 2000', 'DD Mon YYYY'); 
-- 4) 결과
to_date   |
----------+
2000-12-05|
to_number|
---------+
 -12454.8|     
to_timestamp       |
-------------------+
2000-12-05 00:00:00|      



-- [실습 2-2] CASE
-- 1) 변환함수 전체 예시
select cast(123.4 as varchar(10)),
	cast('123.5' as numeric),
	cast(1234.5678 as dec(6, 2)),
	to_char(current_timestamp, 'YYYY-MM-DD HH24:MI:SS'),
	to_char(1234.56, 'L9,999.99'),
	to_number('$12,345', '$99,999'),
	to_date('2014/03/01 21:30:18', 'YYYY/MM/DD HH24:MI:SS'),
	to_timestamp('2014/03/01 21:30:18', 'YYYY/MM/DD HH24:MI:SS');
-- 1) 결과
varchar|numeric|numeric|to_char            |to_char   |to_number|to_date   |to_timestamp       |
-------+-------+-------+-------------------+----------+---------+----------+-------------------
123.4  |  123.5|1234.57|2021-07-23 20:40:18|\ 1,234.56|    12345|2014-03-01|2014-03-01 21:30:18|


-- 2) Case 표현 예시
select emp_name,
	case when salary > 50000000
	then salary
	else 50000000
	end as revised_salary
from tb_emp;
-- 2) 결과
emp_name|revised_salary|
--------+--------------+
김현광     |     225996000|
이유섭     |     145000000|
최명화     |     132996000|
이지은     |     220992000|
정은지     |      87992000|
김성근     |      86000000|
장창우     |      83996000|
김진주     |      90996000|
한영수     |      88992000|
유홍영     |      85992000|
황예리     |      72992000|
정민호     |      79992000|
김혁근     |      75996000|
이경탁     |      82000000|
김성두     |      77992000|
박경수     |      83996000|
김한빈     |      70000000|
이철환     |      74996000|
최석주     |      68996000|
이창일     |      62996000|
홍현철     |      56996000|
윤영현     |      55000000|
김형욱     |      51996000|
최계영     |      50000000|
김홍주     |      50000000|
목경인     |      50000000|
한승훈     |      50000000|
이승범     |      50000000|
안지혜     |      50000000|
김미정     |      50000000|


-- 3)
select org_name,
	case org_name
	when '영업1팀' then '지사'
	when '영업2팀' then '지사'
	when '영업3팀' then '지사'
	when '경영관리팀' then '본사'
	else '지점'
	end as AREA
from tb_org;
-- 3) 결과
org_name|area|
--------+----+
성공기업    |지점  |
경영기획본부  |지점  |
리스크관리본부 |지점  |
영업본부    |지점  |
경영관리팀   |본사  |
정보시스템팀  |지점  |
리스크관리팀  |지점  |
영업1팀    |지사  |
영업2팀    |지사  |
영업3팀    |지사  |


-- 4)
select emp_name,
	case when salary >= 90000000 then 'high'
	when salary >= 60000000 then 'mid'
	else 'low'
	end as salary_grade
from tb_emp;
-- 4) 결과
emp_name|salary_grad
--------+------------+
김현광     |high        |
이유섭     |high        |
최명화     |high        |
이지은     |high        |
정은지     |mid         |
김성근     |mid         |
장창우     |mid         |
김진주     |high        |
한영수     |mid         |
유홍영     |mid         |
황예리     |mid         |
정민호     |mid         |
김혁근     |mid         |
이경탁     |mid         |
김성두     |mid         |
박경수     |mid         |
김한빈     |mid         |
이철환     |mid         |
최석주     |mid         |
이창일     |mid         |
홍현철     |low         |
윤영현     |low         |
김형욱     |low         |
최계영     |low         |
김홍주     |low         |
목경인     |low         |
한승훈     |low         |
이승범     |low         |
안지혜     |low         |
김미정     |low         |


-- 5) 중첩 Case 문
select emp_name, salary,
	case when salary >= 50000000
	then 20000000
	else (case when salary >= 20000000 then 10000000
			else salary * 0.5
			end)
	end as BONUS
from tb_emp;
-- 5) 결과 (김미정은 본인이 저번 학습에서 임의로 추가한 값)
emp_name|salary   |bonus   |
--------+---------+--------+
김현광     |225996000|2000000
이유섭     |145000000|2000000
최명화     |132996000|20000000
이지은     |220992000|2000000
정은지     | 87992000|20000000
김성근     | 86000000|2000000
장창우     | 83996000|20000000
김진주     | 90996000|2000000
한영수     | 88992000|20000000
유홍영     | 85992000|20000000
황예리     | 72992000|20000000
정민호     | 79992000|20000000
김혁근     | 75996000|20000000
이경탁     | 82000000|2000000
김성두     | 77992000|20000000
박경수     | 83996000|20000000
김한빈     | 70000000|2000000
이철환     | 74996000|20000000
최석주     | 68996000|20000000
이창일     | 62996000|20000000
홍현철     | 56996000|20000000
윤영현     | 55000000|2000000
김형욱     | 51996000|20000000
최계영     | 42996000|10000000
김홍주     | 32300000|10000000
목경인     | 41996000|10000000
한승훈     | 49996000|10000000
이승범     | 44996000|10000000
안지혜     | 39000000|10000000
김미정     |         |        |



-- [실습 2-3] NULL 관련 함수
-- 1) coalesce 함수
select emp_name, position,
coalesce(position, '없음')
from tb_emp;
-- 1) 결과
emp_name|position|coalesce
--------+--------+--------+
김현광     |대표이사    |대표이사
이유섭     |본부장     |본부장    
최명화     |본부장     |본부장    
이지은     |본부장     |본부장    
정은지     |팀장      |팀장      |
김성근     |팀장      |팀장      |
장창우     |팀장      |팀장      |
김진주     |팀장      |팀장      |
한영수     |팀장      |팀장      |
유홍영     |팀장      |팀장      |
황예리     |과장      |과장      |
정민호     |과장      |과장      |
김혁근     |과장      |과장      |
이경탁     |과장      |과장      |
김성두     |과장      |과장      |
박경수     |과장      |과장      |
김한빈     |대리      |대리      |
이철환     |대리      |대리      |
최석주     |대리      |대리      |
이창일     |대리      |대리      |
홍현철     |대리      |대리      |
윤영현     |대리      |대리      |
김형욱     |사원      |사원      |
최계영     |사원      |사원      |
김홍주     |사원      |사원      |
목경인     |사원      |사원      |
한승훈     |사원      |사원      |
이승범     |사원      |사원      |
안지혜     |사원      |사원      |
김미정     |        |없음      |


-- 2) case 함수
select emp_name, position,
	case when position is null then '없음'
	else position
	end as 직책
from tb_emp;
-- 2) 결과
emp_name|position|직책  |
--------+--------+----+
김현광     |대표이사    |대표이
이유섭     |본부장     |본부장 |
최명화     |본부장     |본부장 |
이지은     |본부장     |본부장 |
정은지     |팀장      |팀장  |
김성근     |팀장      |팀장  |
장창우     |팀장      |팀장  |
김진주     |팀장      |팀장  |
한영수     |팀장      |팀장  |
유홍영     |팀장      |팀장  |
황예리     |과장      |과장  |
정민호     |과장      |과장  |
김혁근     |과장      |과장  |
이경탁     |과장      |과장  |
김성두     |과장      |과장  |
박경수     |과장      |과장  |
김한빈     |대리      |대리  |
이철환     |대리      |대리  |
최석주     |대리      |대리  |
이창일     |대리      |대리  |
홍현철     |대리      |대리  |
윤영현     |대리      |대리  |
김형욱     |사원      |사원  |
최계영     |사원      |사원  |
김홍주     |사원      |사원  |
목경인     |사원      |사원  |
한승훈     |사원      |사원  |
이승범     |사원      |사원  |
안지혜     |사원      |사원  |
김미정     |        |없음  |


-- 3) null과 공집합
-- 3-1)
select coalesce(salary, 0) sal
from tb_emp 
where emp_name='김태진';
-- 3-1) 결과
sal|
---+

-- 3-2)
select emp_name from tb_emp where emp_name = '김태진';
select max(salary) sal
from tb_emp
where emp_name='김태진';
-- 3-2) 결과 -> 널값이 나온다.
sal|
---+
   |
   
-- 3-3)
select coalesce(max(salary), 9999) sal
from tb_emp 
where emp_name = '김태진';
-- 3-3) 결과
sal |
----+
9999|




-- [실습 3-1] 집계함수, group by
-- 1)
select count(*) 전체건수,
count(position) 직책건수,
count(distinct position) 직책종류,
max(salary) 최대,
min(salary) 최소,
avg(salary) 평균
from tb_emp;
-- 1) 결과
전체건수|직책건수|직책종류|최대       |최소      |평균                   |
----+----+----+---------+--------+---------------------+
  30|  29|   6|225996000|32300000|83247724.137931034483|
  
  
 -- 2) Group by 절
  select * from tb_emp te;
  select org_cd,
  count(*) 인원수,
  min(salary) 최소,
  max(salary) 최대,
  avg(salary) 평균
  from tb_emp
  group by org_cd;
   select position 직책,
  count(*) 인원수,
  min(salary) 최소,
  max(salary) 최대,
  avg(salary) 평균
  from tb_emp
  group by position
 order by "position";
 -- 2) 결과
 -- '김미정' null 값있어서 집계에서도 널값 나옴.
 직책  |인원수|최소       |최대       |평균                   |
----+---+---------+---------+---------------------+
    |  1|         |         |                     |
과장  |  6| 72992000| 83996000|78828000.000000000000|
대표이사|  1|225996000|225996000|   225996000.00000000|
팀장  |  6| 83996000| 90996000|87328000.000000000000|
본부장 |  3|132996000|220992000|   166329333.33333333|
사원  |  7| 32300000| 51996000|43325714.285714285714|
대리  |  6| 55000000| 74996000|64830666.666666666667|


-- 3) Having 절
-- 3-1)
select org_cd 부서,
count(*) 인원수,
avg(salary) 평균
from tb_emp
group by org_cd 
having count(*) >= 4;
select org_cd 부서,
count(*) 인원수,
avg(salary) 평균
from tb_emp
group by org_cd 
where count(*) >= 4; -- 에러
-- 3-1) 결과
부서 |인원수|평균                   |
---+---+---------------------+
10 |  5|61796800.000000000000|
06 |  4|70996000.000000000000|
07 |  4|65322000.000000000000|
05 |  4|70745000.000000000000|
09 |  4|68494000.000000000000|
08 |  4|69497000.000000000000|

-- 3-2)
select org_cd 부서,
max(salary) 최대
from tb_emp 
group by org_cd
having min(salary) <= 40000000;
-- 3-2) 결과
부서 |최대      |
---+--------+
10 |85992000|
07 |83996000|

-- 3-3)
select org_cd, position, avg(salary)
from tb_emp 
where position in ('과장', '대리', '사원')
group by org_cd, position;
-- 3-3) 결과
org_cd|position|avg                  |
------+--------+---------------------+
06    |사원      |42996000.000000000000|
07    |과장      |75996000.000000000000|
07    |사원      |32300000.000000000000|
08    |대리      |62996000.000000000000|
06    |과장      |79992000.000000000000|
09    |대리      |56996000.000000000000|
10    |사원      |41998000.000000000000|
08    |과장      |82000000.000000000000|
09    |사원      |49996000.000000000000|
08    |사원      |41996000.000000000000|
05    |사원      |51996000.000000000000|
06    |대리      |74996000.000000000000|
05    |과장      |72992000.000000000000|
05    |대리      |70000000.000000000000|
10    |과장      |83996000.000000000000|
07    |대리      |68996000.000000000000|
10    |대리      |55000000.000000000000|
09    |과장      |77992000.000000000000|




-- [실습 3-3] 고급 집계쿼리
-- 1)
select org_cd,
avg(case position when '과장' then salary end) 과장,
avg(case position when '대리' then salary end) 대리,
avg(case position when '사원' then salary end) 사원
from tb_emp
where position in ('과장', '대리', '사원')
group by org_cd;
-- 1) 결과
org_cd|과장                   |대리                   |사원                   |
------+---------------------+---------------------+---------------------+
09    |77992000.000000000000|56996000.000000000000|49996000.000000000000|
07    |75996000.000000000000|68996000.000000000000|32300000.000000000000|
10    |83996000.000000000000|55000000.000000000000|41998000.000000000000|
06    |79992000.000000000000|74996000.000000000000|42996000.000000000000|
05    |72992000.000000000000|70000000.000000000000|51996000.000000000000|
08    |82000000.000000000000|62996000.000000000000|41996000.000000000000|


-- 2)
-- 개선전
select org_cd,
sum(coalesce((case position when '팀장' then 1 else 0 end), 0)) 팀장,
sum(coalesce((case position when '과장' then 1 else 0 end), 0)) 과장,
sum(coalesce((case position when '대리' then 1 else 0 end), 0)) 대리,
sum(coalesce((case position when '사원' then 1 else 0 end), 0)) 사원
from tb_emp
group by org_cd;
-- 2) 결과
org_cd|팀장|과장|대리|사원|
------+--+--+--+--+
      | 0| 0| 0| 0|
10    | 1| 1| 1| 2|
06    | 1| 1| 1| 1|
03    | 0| 0| 0| 0|
01    | 0| 0| 0| 0|
02    | 0| 0| 0| 0|
07    | 1| 1| 1| 1|
05    | 1| 1| 1| 1|
04    | 0| 0| 0| 0|
09    | 1| 1| 1| 1|
08    | 1| 1| 1| 1|


-- 3)
-- 개선 후
select org_cd,
coalesce(sum(case position when '팀장' then 1 end), 0) 팀장,
coalesce(sum(case position when '과장' then 1 end), 0) 과장,
coalesce(sum(case position when '대리' then 1 end), 0) 대리,
coalesce(sum(case position when '사원' then 1 end), 0) 사원
from tb_emp
group by org_cd;
-- 3) 결과
org_cd|팀장|과장|대리|사원|
------+--+--+--+--+
      | 0| 0| 0| 0|
10    | 1| 1| 1| 2|
06    | 1| 1| 1| 1|
03    | 0| 0| 0| 0|
01    | 0| 0| 0| 0|
02    | 0| 0| 0| 0|
07    | 1| 1| 1| 1|
05    | 1| 1| 1| 1|
04    | 0| 0| 0| 0|
09    | 1| 1| 1| 1|
08    | 1| 1| 1| 1|




-- [실습 4-1] Equi Join 실습
-- 예제1) 사원 테이블과 조직 테이블의 조인 sql
select tb_emp.emp_name, tb_emp.org_cd, tb_org.org_cd, tb_org.org_name 
from tb_emp, tb_org 
where tb_emp.org_cd = tb_org.org_cd;
-- 예제1) 결과
emp_name|org_cd|org_cd|org_nam
--------+------+------+--------+
김현광     |01    |01    |성공기업    |
이유섭     |02    |02    |경영기획본부
최명화     |03    |03    |리스크관리본
이지은     |04    |04    |영업본부    |
정은지     |05    |05    |경영관리팀   |
김성근     |06    |06    |정보시스템팀
장창우     |07    |07    |리스크관리팀
김진주     |08    |08    |영업1팀    |
한영수     |09    |09    |영업2팀    |
유홍영     |10    |10    |영업3팀    |
황예리     |05    |05    |경영관리팀   |
정민호     |06    |06    |정보시스템팀
김혁근     |07    |07    |리스크관리팀
이경탁     |08    |08    |영업1팀    |
김성두     |09    |09    |영업2팀    |
박경수     |10    |10    |영업3팀    |
김한빈     |05    |05    |경영관리팀   |
이철환     |06    |06    |정보시스템팀
최석주     |07    |07    |리스크관리팀
이창일     |08    |08    |영업1팀    |
홍현철     |09    |09    |영업2팀    |
윤영현     |10    |10    |영업3팀    |
김형욱     |05    |05    |경영관리팀   |
최계영     |06    |06    |정보시스템팀
김홍주     |07    |07    |리스크관리팀
목경인     |08    |08    |영업1팀    |
한승훈     |09    |09    |영업2팀    |
이승범     |10    |10    |영업3팀    |
안지혜     |10    |10    |영업3팀    |


-- 예제2-1) 사원이름, 소속부서코드, 부서명(조직명), 직책을 출력
select tb_emp.emp_no,
	tb_emp.emp_name,
	tb_emp.org_cd,
	tb_org.org_name,
	tb_emp.position
from tb_emp, tb_org 
where tb_emp.org_cd = tb_org.org_cd;
-- 예제2-1) 결과
emp_no|emp_name|org_cd|org_name|position
------+--------+------+--------+--------+
  1001|김현광     |01    |성공기업    |대표이사    |
  1002|이유섭     |02    |경영기획본부  |본부장   
  1003|최명화     |03    |리스크관리본부 |본부장 
  1004|이지은     |04    |영업본부    |본부장     |
  1005|정은지     |05    |경영관리팀   |팀장      |
  1006|김성근     |06    |정보시스템팀  |팀장      
  1007|장창우     |07    |리스크관리팀  |팀장      |
  1008|김진주     |08    |영업1팀    |팀장      |
  1009|한영수     |09    |영업2팀    |팀장      |
  1010|유홍영     |10    |영업3팀    |팀장      |
  1011|황예리     |05    |경영관리팀   |과장      |
  1012|정민호     |06    |정보시스템팀  |과장      |
  1013|김혁근     |07    |리스크관리팀  |과장      |
  1014|이경탁     |08    |영업1팀    |과장      |
  1015|김성두     |09    |영업2팀    |과장      |
  1016|박경수     |10    |영업3팀    |과장      |
  1017|김한빈     |05    |경영관리팀   |대리      |
  1018|이철환     |06    |정보시스템팀  |대리      |
  1019|최석주     |07    |리스크관리팀  |대리      |
  1020|이창일     |08    |영업1팀    |대리      |
  1021|홍현철     |09    |영업2팀    |대리      |
  1022|윤영현     |10    |영업3팀    |대리      |
  1023|김형욱     |05    |경영관리팀   |사원      |
  1024|최계영     |06    |정보시스템팀  |사원      |
  1025|김홍주     |07    |리스크관리팀  |사원      |
  1026|목경인     |08    |영업1팀    |사원      |
  1027|한승훈     |09    |영업2팀    |사원      |
  1028|이승범     |10    |영업3팀    |사원      |
  1029|안지혜     |10    |영업3팀    |사원      |
  
-- 예제2-2) Alias 사용
select e.emp_no,
  	e.emp_name,
  	e.org_cd,
  	o.org_name,
  	e.position 
from tb_emp as e,
	tb_org as o 
where e.org_cd = o.org_cd 
and e.position = '팀장'
order by o.org_name;
-- 예제2-2) 결과
emp_no|emp_name|org_cd|org_name|position|
------+--------+------+--------+--------+
  1005|정은지     |05    |경영관리팀   |팀장      |
  1007|장창우     |07    |리스크관리팀  |팀장      |
  1008|김진주     |08    |영업1팀    |팀장      |
  1009|한영수     |09    |영업2팀    |팀장      |
  1010|유홍영     |10    |영업3팀    |팀장      |
  1006|김성근     |06    |정보시스템팀  |팀장      |


  
-- [실습 4-2] 3개 이상 테이블 조인
-- 예제1) 계좌번호, 고객명, 상품명, 계약금액, 관리자명 출력
select a.accno,
	c.cust_name,
	p.prod_name,
	a.cont_amt,
	e.emp_name
from tb_accnt a,
	tb_cust c,
	tb_prod p,
	tb_emp e 
where a.cust_no = c.cust_no
and a.prod_cd = p.prod_cd
and a.manager = e.emp_no;
-- 예제1) 결과
-- 1800+ 이상이 나옵니다. (중략하겠습니다)
accno |cust_name|prod_name|cont_amt|emp_name|
------+---------+---------+--------+--------+
105400|김윤태      |보통예금     |   49430|유홍영     |
105401|정유진      |신용대출     |   50850|한영수     |
105402|구성국      |일반대출     |   81297|김진주     |
105403|장철       |보통예금     |     211|이경탁     |
105404|홍영록      |종합통장대출   |   60251|홍현철     |
105405|김광엽      |정기적금     |   50997|유홍영     |
105406|관난희      |종합통장대출   |   69777|김진주     |
105407|박옥희      |정기적금     |    2431|유홍영     |
105408|오효진      |담보대출     |   46591|이경탁     |


-- 예제2) 사원별 급여와 어느 등급에 속하는지 알고 싶다는 요구사항에 대한 Non EQUI JOIN
select e.emp_name 사원명,
	e.salary 연봉,
	s.grade 급여등급
from tb_emp e, tb_grade s
where e.salary
between s.low_sal and s.high_sal;
-- 예제2) 결과
사원명|연봉       |급여등급|
---+---------+----+
김홍주| 32300000|   1|
안지혜| 39000000|   1|
홍현철| 56996000|   2|
윤영현| 55000000|   2|
김형욱| 51996000|   2|
최계영| 42996000|   2|
목경인| 41996000|   2|
한승훈| 49996000|   2|
이승범| 44996000|   2|
황예리| 72992000|   3|
정민호| 79992000|   3|
김혁근| 75996000|   3|
김성두| 77992000|   3|
김한빈| 70000000|   3|
이철환| 74996000|   3|
최석주| 68996000|   3|
이창일| 62996000|   3|
정은지| 87992000|   4|
김성근| 86000000|   4|
장창우| 83996000|   4|
김진주| 90996000|   4|
한영수| 88992000|   4|
유홍영| 85992000|   4|
이경탁| 82000000|   4|
박경수| 83996000|   4|
김현광|225996000|   5|
이유섭|145000000|   5|
최명화|132996000|   5|
이지은|220992000|   5|



-- [실습 4-3] 표준조인
-- Inner Join
-- 예제1) 사원 번호와 사원 이름, 소속 부서 코드와 소속부서 이름을 찾아본다.
-- 예제1-1) where 절 join 조건
select emp.emp_no, emp.emp_name, org.org_name
from tb_emp emp, tb_org org
where emp.org_cd  = org.org_cd;
-- 예제1-1) 결과
emp_no|emp_name|org_name
------+--------+--------+
  1001|김현광     |성공기업    |
  1002|이유섭     |경영기획본부
  1003|최명화     |리스크관리본
  1004|이지은     |영업본부    |
  1005|정은지     |경영관리팀   
  1006|김성근     |정보시스템팀
  1007|장창우     |리스크관리팀
  1008|김진주     |영업1팀    |
  1009|한영수     |영업2팀    |
  1010|유홍영     |영업3팀    |
  1011|황예리     |경영관리팀   |
  1012|정민호     |정보시스템팀 
  1013|김혁근     |리스크관리팀 
  1014|이경탁     |영업1팀    |
  1015|김성두     |영업2팀    |
  1016|박경수     |영업3팀    |
  1017|김한빈     |경영관리팀   |
  1018|이철환     |정보시스템팀 
  1019|최석주     |리스크관리팀 
  1020|이창일     |영업1팀    |
  1021|홍현철     |영업2팀    |
  1022|윤영현     |영업3팀    |
  1023|김형욱     |경영관리팀   |
  1024|최계영     |정보시스템팀
  1025|김홍주     |리스크관리팀 
  1026|목경인     |영업1팀    |
  1027|한승훈     |영업2팀    |
  1028|이승범     |영업3팀    |
  1029|안지혜     |영업3팀    |
  
-- 예제1-2) from 절 join 조건
select emp.emp_no, emp.emp_name, org.org_name
from tb_emp emp inner join tb_org org 
on emp.org_cd = org.org_cd;
-- 예제1-2) 결과
emp_no|emp_name|org_name
------+--------+--------+
  1001|김현광     |성공기업    |
  1002|이유섭     |경영기획본부
  1003|최명화     |리스크관리본
  1004|이지은     |영업본부    |
  1005|정은지     |경영관리팀   |
  1006|김성근     |정보시스템팀
  1007|장창우     |리스크관리팀
  1008|김진주     |영업1팀    |
  1009|한영수     |영업2팀    |
  1010|유홍영     |영업3팀    |
  1011|황예리     |경영관리팀   |
  1012|정민호     |정보시스템팀  
  1013|김혁근     |리스크관리팀  
  1014|이경탁     |영업1팀    |
  1015|김성두     |영업2팀    |
  1016|박경수     |영업3팀    |
  1017|김한빈     |경영관리팀   |
  1018|이철환     |정보시스템팀 
  1019|최석주     |리스크관리팀 
  1020|이창일     |영업1팀    |
  1021|홍현철     |영업2팀    |
  1022|윤영현     |영업3팀    |
  1023|김형욱     |경영관리팀   |
  1024|최계영     |정보시스템팀 
  1025|김홍주     |리스크관리팀 
  1026|목경인     |영업1팀    |
  1027|한승훈     |영업2팀    |
  1028|이승범     |영업3팀    |
  1029|안지혜     |영업3팀    |
  
-- 예제1-3) inner 키워드 생략
select emp.emp_no, emp.emp_name, org.org_name
from tb_emp emp
join tb_org org
on emp.org_cd = org.org_cd;
-- 예제1-3) 결과
emp_no|emp_name|org_name|
------+--------+--------+
  1001|김현광     |성공기업    |
  1002|이유섭     |경영기획본부  |
  1003|최명화     |리스크관리본부
  1004|이지은     |영업본부    |
  1005|정은지     |경영관리팀   |
  1006|김성근     |정보시스템팀  |
  1007|장창우     |리스크관리팀  |
  1008|김진주     |영업1팀    |
  1009|한영수     |영업2팀    |
  1010|유홍영     |영업3팀    |
  1011|황예리     |경영관리팀   |
  1012|정민호     |정보시스템팀  |
  1013|김혁근     |리스크관리팀  |
  1014|이경탁     |영업1팀    |
  1015|김성두     |영업2팀    |
  1016|박경수     |영업3팀    |
  1017|김한빈     |경영관리팀   |
  1018|이철환     |정보시스템팀  |
  1019|최석주     |리스크관리팀  |
  1020|이창일     |영업1팀    |
  1021|홍현철     |영업2팀    |
  1022|윤영현     |영업3팀    |
  1023|김형욱     |경영관리팀   |
  1024|최계영     |정보시스템팀  |
  1025|김홍주     |리스크관리팀  |
  1026|목경인     |영업1팀    |
  1027|한승훈     |영업2팀    |
  1028|이승범     |영업3팀    |
  1029|안지혜     |영업3팀    |
  
  
-- From 절 Join 조건
-- 예제2-1) 계좌 테이블에서 계좌 번호, 고객번호, 고객명을 고객테이블과 조인하여 찾아본다.
select acc.accno, acc.cust_no, cust.cust_name
from tb_accnt acc 
inner join tb_cust cust 
on cust.cust_no = acc.cust_no;
-- 예제2-1) 결과
-- 중략하겠습니다.
accno |cust_no|cust_name|
------+-------+---------+
105400|  10115|김윤태      |
105401|  10183|정유진      |
105402|  10027|구성국      |
105403|  10015|장철       |
105404|  10044|홍영록      |
105405|  10074|김광엽      |
105406|  10019|관난희      |
105407|  10055|박옥희      |
105408|  10112|오효진      |


-- 예제2-2) 조직코드 10인 부서의 소속 사원 이름 및 소속 부서 코드, 부서코드, 부서이름을 찾아본다.
select e.emp_name, e.org_cd, o.org_cd, o.org_name
from tb_emp e
join tb_org o 
on e.org_cd  = o.org_cd
where e.org_cd = '10';
-- 예제2-2) 결과
emp_name|org_cd|org_cd|org_name|
--------+------+------+--------+
유홍영     |10    |10    |영업3팀    |
박경수     |10    |10    |영업3팀    |
윤영현     |10    |10    |영업3팀    |
이승범     |10    |10    |영업3팀    |
안지혜     |10    |10    |영업3팀    |
  

-- On 조건절
-- 다중 조인
-- 예제3-1) where 절 join 조건
select a.accno 계좌번호,
c.cust_name 고객명,
p.prod_name 상품명,
a.cont_amt 계약금액,
e.emp_name 담당자명
from tb_accnt a, tb_cust c, tb_prod p, tb_emp e 
where a.cust_no = c.cust_no
and a.prod_cd = p.prod_cd 
and a.manager = e.emp_no;
-- 예제3-1) 결과
-- 중략하겠습니다.
계좌번호  |고객명|상품명   |계약금액 |담당자명|
------+---+------+-----+----+
105400|김윤태|보통예금  |49430|유홍영 |
105401|정유진|신용대출  |50850|한영수 |
105402|구성국|일반대출  |81297|김진주 |
105403|장철 |보통예금  |  211|이경탁 |
105404|홍영록|종합통장대출|60251|홍현철 |
105405|김광엽|정기적금  |50997|유홍영 |
105406|관난희|종합통장대출|69777|김진주 |
105407|박옥희|정기적금  | 2431|유홍영 |

-- 예제3-2) On 절 Join 조건
select a.accno 계좌번호,
c.cust_name 고객명,
p.prod_name 상품명,
a.cont_amt 계약번호,
e.emp_name 담당자명 
from tb_accnt a 
inner join tb_cust c on a.cust_no = c.cust_no
inner join tb_prod p on a.prod_cd = p.prod_cd
inner join tb_emp e on a.manager = e.emp_no;
-- 예제3-2) 결과
-- 중략하겠습니다
계좌번호  |고객명|상품명   |계약번호 |담당자명|
------+---+------+-----+----+
105400|김윤태|보통예금  |49430|유홍영 |
105401|정유진|신용대출  |50850|한영수 |
105402|구성국|일반대출  |81297|김진주 |
105403|장철 |보통예금  |  211|이경탁 |
105404|홍영록|종합통장대출|60251|홍현철 |
105405|김광엽|정기적금  |50997|유홍영 |
105406|관난희|종합통장대출|69777|김진주 |
105407|박옥희|정기적금  | 2431|유홍영 |
105408|오효진|담보대출  |46591|이경탁 |
105409|이영주|보통예금  |44996|한영수 |
105410|박성만|학자금대출 |81268|박경수 |
105411|나홍건|주택자금대출|89610|김진주 |
105412|이순천|담보대출  |57497|김성두 |


-- CROSS 조인
-- 예제4-1) 
select count(emp_name) from tb_emp;
select count(org_name) from tb_org;
-- 예제4-1) 결과
count|
-----+
   30|
count|
-----+
   10|
   
-- 예제4-2)
select e.emp_name, o.org_name 
from tb_emp e cross join tb_org o 
order by emp_name;
-- 예제4-2) 결과
emp_name|org_name|
--------+--------+
김미정     |성공기업    |
김미정     |영업3팀    |
김미정     |영업2팀    |
김미정     |영업1팀    |
김미정     |리스크관리팀  |
김미정     |정보시스템팀  |
김미정     |경영관리팀   |
김미정     |영업본부    |
김미정     |리스크관리본부 |
김미정     |경영기획본부  |
김성근     |성공기업    |
김성근     |영업3팀    |
김성근     |영업2팀    |
김성근     |영업1팀    |
김성근     |리스크관리팀  |
김성근     |정보시스템팀  |

-- 예제4-3)
select count(e.emp_name)
from tb_emp e cross join tb_org o;
-- 예제4-3) 결과
count|
-----+
  300|


-- Left Outer Join
-- 예제5-1) 직원중에 아직 부서 배정이 안된 사원도 있다.
-- 사원과 조직을 join 하되 부서배정이 안된 사원의 정보도 같이 출력하도록 한다.
select e.emp_no 사번,
e.emp_name 사원명,
e.position 직책,
o.org_name 부서명 
from tb_emp e left outer join tb_org o
on e.org_cd = o.org_cd
where e.position = '사원';
-- 예제5-1) 결과
사번  |사원명|직책|부서명   |
----+---+--+------+
1023|김형욱|사원|경영관리팀 |
1024|최계영|사원|정보시스템팀|
1025|김홍주|사원|리스크관리팀|
1026|목경인|사원|영업1팀  |
1027|한승훈|사원|영업2팀  |
1029|안지혜|사원|영업3팀  |
1028|이승범|사원|영업3팀  |

-- Right Outer Join
-- 예제5-2) 이전 예제에서 Left join을 outer join으로 표현한다.
select e.emp_no 사번,
e.emp_name 사원명,
e.position 직책,
o.org_name 부서명
from tb_org o right outer join tb_emp e 
on e.org_cd = o.org_cd
where e.position = '사원';
-- 예제5-2) 결과
사번  |사원명|직책|부서명   |
----+---+--+------+
1023|김형욱|사원|경영관리팀 |
1024|최계영|사원|정보시스템팀|
1025|김홍주|사원|리스크관리팀|
1026|목경인|사원|영업1팀  |
1027|한승훈|사원|영업2팀  |
1029|안지혜|사원|영업3팀  |
1028|이승범|사원|영업3팀  |

-- Full Outer Join
-- 예제6-1)
select a.org_cd,
a.org_name,
b.org_cd,
b.org_name
from tb_org a full outer join tb_org b 
on a.org_cd = b.org_cd;
-- 예제6-1) 결과
org_cd|org_name|org_cd|org_name|
------+--------+------+--------+
01    |성공기업    |01    |성공기업    |
02    |경영기획본부  |02    |경영기획본부  |
03    |리스크관리본부 |03    |리스크관리본부 |
04    |영업본부    |04    |영업본부    |
05    |경영관리팀   |05    |경영관리팀   |
06    |정보시스템팀  |06    |정보시스템팀  |
07    |리스크관리팀  |07    |리스크관리팀  |
08    |영업1팀    |08    |영업1팀    |
09    |영업2팀    |09    |영업2팀    |
10    |영업3팀    |10    |영업3팀    |

-- 예제6-2)
select a.org_cd,
a.org_name,
b.org_cd,
b.org_name
from tb_org a
left outer join tb_org b 
on a.org_cd = b.org_cd
union
select a.org_cd,
a.org_name,
b.org_cd,
b.org_name
from tb_org a
right outer join tb_org b 
on a.org_cd = b.org_cd;
-- 예제6-2)
org_cd|org_name|org_cd|org_name|
------+--------+------+--------+
07    |리스크관리팀  |07    |리스크관리팀  |
03    |리스크관리본부 |03    |리스크관리본부 |
02    |경영기획본부  |02    |경영기획본부  |
04    |영업본부    |04    |영업본부    |
09    |영업2팀    |09    |영업2팀    |
08    |영업1팀    |08    |영업1팀    |
06    |정보시스템팀  |06    |정보시스템팀  |
05    |경영관리팀   |05    |경영관리팀   |
01    |성공기업    |01    |성공기업    |
10    |영업3팀    |10    |영업3팀    |











